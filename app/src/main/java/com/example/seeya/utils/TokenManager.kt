package com.example.seeya.utils

import android.content.Context
import android.content.SharedPreferences
import android.util.Log
import com.example.seeya.data.model.User
import com.google.gson.Gson

object TokenManager {
    private const val PREFS_NAME = "auth_prefs"
    private const val TOKEN_KEY = "jwt_token"
    private const val USER_KEY = "user_data"

    private fun getPrefs(context: Context): SharedPreferences {
        return context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE)
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω
    fun saveToken(context: Context, token: String) {
        getPrefs(context).edit().putString(TOKEN_KEY, token).apply()
    }

    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
    fun getToken(context: Context): String? {
        return getPrefs(context).getString(TOKEN_KEY, null)
    }

    // –û—á–∏—â–∞–µ–º —Ç–æ–∫–µ–Ω
    fun clearToken(context: Context) {
        getPrefs(context).edit().remove(TOKEN_KEY).apply()
    }

    fun saveUser(context: Context, user: User) {
        val userJson = Gson().toJson(user)

        Log.d("TokenManager", "Saving User JSON: $userJson")

        getPrefs(context).edit().putString(USER_KEY, userJson).apply()
    }

    fun getUser(context: Context): User? {
        val userJson = getPrefs(context).getString(USER_KEY, null)

        Log.d("TokenManager", "Raw JSON before parsing: $userJson") // üëÄ –ü—Ä–æ–≤–µ—Ä—è–µ–º JSON –ø–µ—Ä–µ–¥ –ø–∞—Ä—Å–∏–Ω–≥–æ–º

        return userJson?.let {
            try {
                Gson().fromJson(it, User::class.java).also { parsedUser ->
                    Log.d("TokenManager", "Parsed User: $parsedUser") // üëÄ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ id –Ω–µ null
                }
            } catch (e: Exception) {
                Log.e("TokenManager", "–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ User: ${e.message}")
                null
            }
        }
    }


    // –û—á–∏—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    fun clearUser(context: Context) {
        getPrefs(context).edit().remove(USER_KEY).apply()
    }

    // –ü–æ–ª–Ω—ã–π –≤—ã—Ö–æ–¥ (–æ—á–∏—â–∞–µ–º –≤—Å—ë)
    fun logout(context: Context) {
        getPrefs(context).edit().clear().apply()
    }
}